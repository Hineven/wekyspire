<<<<<<< HEAD
name: Deploy Vite App to GitHub Pages

on:
  push:
    branches: [ master ]

permissions:
  contents: write
  pages: write
  id-token: write
  
=======
name: Deploy to GitHub Pages

on:
  push:
    branches: [ master, nightly ]

permissions:
  contents: write

>>>>>>> origin/nightly
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
<<<<<<< HEAD
      - name: 🧱 Checkout code
        uses: actions/checkout@v4

      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Build with Vite
        run: |
          echo "Build deploy base URL: $VITE_BASE"
          npm run build
        env:
          VITE_BASE: ${{ steps.pages.outputs.base_path }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
=======
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install
        run: npm ci

      # 👇 设置部署子路径
      - name: Set deploy path
        id: deploy_path
        run: |
          if [ "${{ github.ref_name }}" == "master" ]; then
            echo "subdir=." >> $GITHUB_OUTPUT
            echo "base=/project_name/" >> $GITHUB_ENV
          else
            echo "subdir=nightly" >> $GITHUB_OUTPUT
            echo "base=/project_name/nightly/" >> $GITHUB_ENV
          fi

      # 👇 设置前端 base 路径
      - name: Set Vite base path
        run: |
          echo "VITE_BASE=${{ env.base }}" >> .env.production

      - name: Build
        run: npm run build

      # 👇 拉取现有 gh-pages 内容
      - name: Fetch existing gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: staging
          sparse-checkout: |
            /*
          sparse-checkout-cone-mode: false

      - name: Prepare combined deploy directory
        run: |
          mkdir -p deploy_dir
          # 拷贝现有内容（除了当前要更新的目录）
          if [ -d "staging/nightly" ] && [ "${{ github.ref_name }}" != "nightly" ]; then
            cp -r staging/nightly deploy_dir/
          fi
          if [ -f "staging/index.html" ] && [ "${{ github.ref_name }}" == "nightly" ]; then
            cp -r staging/* deploy_dir/ 2>/dev/null || true
            rm -rf deploy_dir/nightly
          fi
          # 拷贝当前构建
          mkdir -p deploy_dir/${{ steps.deploy_path.outputs.subdir }}
          cp -r dist/* deploy_dir/${{ steps.deploy_path.outputs.subdir }}/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy_dir
          publish_branch: gh-pages
          # 不使用 force_orphan，保留历史结构
>>>>>>> origin/nightly
